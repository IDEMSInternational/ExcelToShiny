% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_shiny.R
\name{build_shiny}
\alias{build_shiny}
\title{PLH Shiny Function - Create and Launch a Shiny Dashboard}
\usage{
build_shiny(
  title,
  data_list,
  data_frame,
  status = "primary",
  colour = "blue",
  date_from = "2021-10-14",
  key_var = NULL,
  deploy_shiny = TRUE
)
}
\arguments{
\item{title}{A string specifying the title of the dashboard.}

\item{data_list}{A list of data frames and associated metadata that define the contents and structure of the dashboard. Each entry in the list corresponds to different sections or components within the dashboard.}

\item{data_frame}{A data frame that serves as the main dataset for the dashboard. It is used to generate the main page content and handle filters or groupings.}

\item{status}{A string specifying the status of the dashboard elements. The default is "primary", but it can also be set to "success", "info", "warning", or "danger" depending on the chosen colour.}

\item{colour}{A string specifying the skin colour of the Shiny App. Valid options include "blue", "green", "light blue", "orange", and "red". Each colour corresponds to a different status.}

\item{date_from}{A string representing the initial date to filter data from, in the format "YYYY-MM-DD". The default is "2021-10-14".}

\item{key_var}{A string specifying the name of the key variable that links different data frames together. If NULL, no key-based linking is performed.}

\item{deploy_shiny}{Default TRUE. Boolean denoting if the function should deploy the shiny dashboard.}
}
\value{
A Shiny App object that, when run, launches the interactive dashboard.
}
\description{
The PLH_shiny function generates a Shiny dashboard application based on the provided datasets and specifications. This function is designed to create a dynamic and interactive user interface that includes value boxes, filters, groupings, plots, tables, and downloadable content, all customisable through the input parameters.
}
\details{
This function facilitates the creation of a Shiny dashboard tailored to the specified datasets and requirements. The dashboard includes:
\itemize{
\item Sidebar Menu: Dynamically generated based on the provided data_list.
\item Value Boxes: Display key metrics at the top of the dashboard.
\item Filters and Grouping: Allows users to filter and group data on the main page.
\item Tabs and Content Display: Customisable tabs and content displays based on the data_list configuration.
\item Downloadable Content: Enables users to download specific datasets as CSV files.
}
}
\note{
Ensure that the data_list and data_frame parameters are correctly formatted to match the expected structure for the dashboard to function properly.
}
\examples{
\dontrun{
# Example of using the PLH_shiny function to create a dashboard
# TODO: give this as a reproducible example
data_list <- list(
contents = data.frame(
ID = c("main_page", "tab_1", "tab_2"),
type = c("Tabbed_display", "Display", "Download"),
stringsAsFactors = FALSE
),
main_page = data.frame(
name = c("value_1", "value_2"),
type = c("value_box", "filter_box"),
variable = c("metric1", "metric2"),
stringsAsFactors = FALSE
)
)
data_frame <- data.frame(
metric1 = rnorm(100),
metric2 = rnorm(100),
stringsAsFactors = FALSE
)

# Run the dashboard
shinyApp(ui = PLH_shiny("My Dashboard", data_list, data_frame), server = function(input, output) {})
}

}
